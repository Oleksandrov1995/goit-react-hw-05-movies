{"version":3,"file":"static/js/891.caa73484.chunk.js","mappings":"mTAEMA,EAAU,6BACVC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,kEACsCF,IAF/B,uBACtBG,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mCACgBC,EADhB,iCACgDK,EADhD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCQ,EADD,oBACoBP,EADpB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCQ,EADD,4BAC4BP,EAD5B,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACCQ,EADD,6BAC6BP,EAD7B,2BADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD,mMClCjBO,EAAgBC,EAAAA,GAAAA,QAAH,uEAKbC,EAAeD,EAAAA,GAAAA,GAAH,sIAQZE,EAAOF,EAAAA,GAAAA,GAAH,6CAIJG,EAAWH,EAAAA,GAAAA,GAAH,8EAMRI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8M,8ECxBVM,EAAmB,WAC9B,OACE,gBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,SAAvF,UACA,SAAC,KAAD,CACEA,OAAQ,GACRC,MAAO,GACPC,OAAQ,EACRC,MAAM,OACNC,UAAU,qBACVC,SAAS,KAId,C,sJCYD,EAlBkB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAc,oBAEd,SAAC,KAAD,UACGA,EAAeC,KAAI,SAAAC,GAAa,OAC/B,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,GAAE,kBAAaD,EAAcE,IAAzC,SACGF,EAAcG,SAFJH,EAAcE,GADE,QAUxC,E,UCiBD,EArCa,WACX,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAON,EAAP,KAAuBO,EAAvB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBF,GAAS,GACTF,GAAa,GAHW,UAIEpC,EAAAA,EAAAA,MAJF,gBAIhByC,EAJgB,EAIhBA,QACRP,EAAkBO,GALM,kDAOxBH,GAAS,GAPe,yBASxBF,GAAa,GATW,6EAAH,qDAazBI,GACD,GAAE,KAGD,8BACGL,GACC,SAAC,IAAD,IACEE,GACF,uBAAG,4EAIH,SAAC,EAAD,CAAWV,eAAgBA,KAIlC,C","sources":["API/api.js","components/MovieList/MovieList.styled.js","components/SharedLayout/LoadingDots.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'ae3dfc60cd2829ff01fb712d351bf7bc';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  `;\n\nexport const List = styled.ul`\n  list-style: disc;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    border-bottom: 2px solid #1c85ff;\n  }\n`;\n","\nimport {ThreeDots} from 'react-loader-spinner'\nexport const LoadingIndicator = () => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n    <ThreeDots\n      height={80}\n      width={80}\n      radius={9}\n      color=\"blue\"\n      ariaLabel=\"three-dots-loading\"\n      visible={true}\n    />\n  </div>\n  );\n};\n\n","import PropTypes from 'prop-types';\nimport {\n  StyledSection,\n  StyledLink,\n  SectionTitle,\n  List,\n  ListItem,\n} from './MovieList.styled';\n\nconst MovieList = ({ trendingMovies }) => {\n  return (\n    <StyledSection>\n      <SectionTitle>Trending today</SectionTitle>\n\n      <List>\n        {trendingMovies.map(trendingMovie => (\n          <ListItem key={trendingMovie.id}>\n            <StyledLink to={`/movies/${trendingMovie.id}`}>\n              {trendingMovie.title}\n            </StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from '../API/api';\nimport MovieList from 'components/MovieList/MovieList';\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const { results } = await fetchTrendMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingIndicator />\n      ) : error ? (\n        <p>\n          Sorry, we could not fetch the trending movies. Please try again later.\n        </p>\n      ) : (\n        <MovieList trendingMovies={trendingMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews","StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","LoadingIndicator","style","display","justifyContent","alignItems","height","width","radius","color","ariaLabel","visible","trendingMovies","map","trendingMovie","to","id","title","useState","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","results"],"sourceRoot":""}